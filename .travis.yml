stages:
  - name: self-test
    if: type = push
  - name: integration
    if: branch = master OR type = pull_request

env:
 global:
  - SYS=22
  - ABI="default;armeabi-v7a"
  # - SYS=25
  # - ABI="google_apis;armeabi-v7a"
  - ADB_INSTALL_TIMEOUT=10 # minutes

_integration_job_template: &integration_job_template
  stage: integration
  cache: npm
  install:
    - nvm install 11
    - node --version
    - gem install xcodeproj
    - npm install
    - npm install -g yarn
    - npm install -g react-native-cli
  before_script:
    - integration-tests/scripts/make-project $RN_VERSION integration-tests/Setup

# taken from https://github.com/mmcc007/test_emulators
_android_job_template: &android_job_template
  <<: *integration_job_template
  language: generic
  # sudo: required
  dist: trusty
  before_install:
    - |
      if [ $TRAVIS_OS_NAME == "linux" ]; then
        export DISPLAY=:99.0
        sh -e /etc/init.d/xvfb start
        sleep 3 # give xvfb some time to start
      fi
    # Install android tools
    - ANDROID_TOOLS=4333796 # android-28
    - export ANDROID_HOME=~/android-sdk
    - |
      if [ $TRAVIS_OS_NAME == "osx" ]; then
        wget -q "https://dl.google.com/android/repository/sdk-tools-darwin-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
      else
        wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
      fi
    - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
    - rm android-sdk-tools.zip
    - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
    # Silence warning.
    - mkdir -p ~/.android
    - touch ~/.android/repositories.cfg
    # install correct version of java on osx
    - |
      if [ $TRAVIS_OS_NAME == "osx" ]; then
        # skip brew update
        export HOMEBREW_NO_AUTO_UPDATE=1
        brew cask uninstall java; brew tap caskroom/versions; brew cask install java8;
      fi
    # Accept licenses before installing components, no need to echo y for each component
    - yes | sdkmanager --licenses
    # Platform tools
    - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
    - sdkmanager --list | head -15
    # install older build tools (for emulator)
    - sdkmanager "build-tools;28.0.3" "build-tools;25.0.2" "platforms;android-28" "platforms;android-25" > /dev/null
    # Create and start emulator.
    - sdkmanager "system-images;android-$SYS;$ABI" > /dev/null
    - sdkmanager --list | head -15
    - echo no | avdmanager create avd -n test -k "system-images;android-$SYS;$ABI"
    # fix timezone warning on osx
    - if [ $TRAVIS_OS_NAME == "osx" ]; then sudo ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime; fi
    # emulator debug options
    #  - EMU_DEBUG="-debug all -logcat *:e -verbose -show-kernel"
    #  - EMU_ADDITIONAL_OPTIONS="-camera-back none -camera-front none -memory 2048"
    - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window $EMU_ADDITIONAL_OPTIONS ${EMU_DEBUG} &
  script:
    - integration-tests/scripts/wait-for-emulator
    - cd integration-tests/Setup
    - node_modules/.bin/flow check
    - cd android
    - npm start &
    - ./gradlew connectedAndroidTest

_ios_job_template: &ios_job_template
  <<: *integration_job_template
  language: objective-c
  os: osx
  osx_image: xcode10.1
  xcode_project: integration-tests/Setup/ios/Setup.xcodeproj
  xcode_scheme: Setup
  xcode_destination: platform=iOS Simulator
  script:
    - cd integration-tests/Setup
    - node_modules/.bin/flow check
    - xcodebuild test -scheme Setup -project ios/Setup.xcodeproj -quiet -UseModernBuildSystem=NO -destination 'platform=iOS Simulator,name=iPhone XS Max,OS=12.1'

matrix:
  include:
    - language: node_js
      stage: self-test
      node_js: 8
      script:
        - npm install
        - npm run lint
        - npm test

    # Integration tests for different React Native versions
    - <<: *android_job_template
      name: 'Integrate with RN 0.57.2 Android'
      env: RN_VERSION=0.57.2
    - <<: *ios_job_template
      name: 'Integrate with RN 0.57.2 iOS'
      env: RN_VERSION=0.57.2
    - <<: *android_job_template
      name: 'Integrate with RN 0.57.5 Android'
      env: RN_VERSION=0.57.5
    - <<: *ios_job_template
      name: 'Integrate with RN 0.57.5 iOS'
      env: RN_VERSION=0.57.5
    - <<: *android_job_template
      name: 'Integrate with RN 0.57.8 Android'
      env: RN_VERSION=0.57.8
    - <<: *ios_job_template
      name: 'Integrate with RN 0.57.8 iOS'
      env: RN_VERSION=0.57.8
    - <<: *android_job_template
      name: 'Integrate with RN 0.58.0 Android'
      env: RN_VERSION=0.58.0
    - <<: *ios_job_template
      name: 'Integrate with RN 0.58.0 iOS'
      env: RN_VERSION=0.58.0
    - <<: *android_job_template
      name: 'Integrate with RN 0.58.3 Android'
      env: RN_VERSION=0.58.3
    - <<: *ios_job_template
      name: 'Integrate with RN 0.58.3 iOS'
      env: RN_VERSION=0.58.3
    - <<: *android_job_template
      name: 'Integrate with RN 0.59.0 Android'
      env: RN_VERSION=0.59.0
    - <<: *ios_job_template
      name: 'Integrate with RN 0.59.0 iOS'
      env: RN_VERSION=0.59.0
